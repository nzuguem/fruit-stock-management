openapi: 3.0.3
info:
  title: OpenAPI Fruit Stock Management
  description: |-
    Fruit Stock Management Service
  contact:
    name: Nzuguem Fruit Stock Management
    url: https://github.com/nzuguem
    email: nzuguemkevine@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
paths:
  /fruits/{code}:
    get:
      summary: Verify Fruit Quantity By Code
      description: Verify Fruit Quantity By Code
      operationId: verifyFruitQuantityByCode
      parameters:
        - name: code
          in: path
          description: Code of Product
          required: true
          schema:
            type: string
          examples:
            # For Microcks tests, this fruit must exist in the Store (BDD, etc...)
            # Because in response, this example must return a 200
            kiwi:
              value: KW
            # For Microcks tests, this fruit must not exist in the Store (BDD, etc...)
            # Because in response, this example must return a 404
            test:
              value: TEST
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FruitQuantity'
              examples:
                kiwi:
                  value:
                    code: KW
                    id: 1
                    name: Kiwi
                    quantity: 500
        '404':
          description: Fruit Not Found
          content:
            application/problem+json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/smartbear-public/ProblemDetails/1.0.0#/components/responses/NotFound'
              examples:
                test: {}
  /fruits:
    post:
      summary: Provide Fruit Stock
      description: Provide Fruit Stock
      operationId: provideFruitStock
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FruitQuantity'
            examples:
              # For Microcks tests, this fruit must not exist in the Store (BDD, etc...)
              # Because in response, this example must return a 201 
              test:
                value:
                  name: Test
                  quantity: 500
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FruitQuantity'
              examples:
                test: {}
        '500':
          description: Internal Server Error
components:
  schemas:
    FruitQuantity:
      required:
        - quantity
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        name:
          type: string
        quantity:
          type: integer
