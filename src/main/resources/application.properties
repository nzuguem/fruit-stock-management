spring.application.name=fruit-stock-management

## Spring Docker Compose Support
spring.docker.compose.enabled=true
spring.docker.compose.lifecycle-management=start-and-stop
spring.docker.compose.stop.command=stop
spring.docker.compose.start.command=up
spring.docker.compose.file=compose.spring.yml

## Spring Actuator
management.endpoints.web.exposure.include=health,sbom

### Push Metrics in OTLP Format
# management.otlp.metrics.export.url=http://localhost:4318/v1/metrics
# management.otlp.metrics.export.step=10s
# management.metrics.tags.application=${spring.application.name}

## Spring Kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=fruits-sold-out
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=me.nzuguem.fruitstockmanagement.models.FruitQuantityEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false

application.kafka.producer.topic-name=fruits-provisioning
application.kafka.consumer.topic-name=fruits-sold-out

## Application conf
application.clients.code-provider.url=http://localhost:3001

## Spring Mail
spring.mail.host=localhost
spring.mail.port=1025

## Spring TestContainers
spring.testcontainers.beans.startup=parallel

## Flyway
spring.flyway.locations=classpath:db/migrations
spring.flyway.enabled=true

## Spring Virtual Thread
spring.threads.virtual.enabled=true