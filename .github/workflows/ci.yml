name: Fruit Stock Management

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: üèóÔ∏è Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '22'
          cache: maven
      
      - name: Build Application
        env:
          MAVEN_OPTS: >-
            -Djansi.force=true
            -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
            -XX:+TieredCompilation 
            -XX:TieredStopAtLevel=1
            -Dstyle.color=always 
            --no-transfer-progress 
            --errors 
            --fail-at-end
            --show-version 
            --batch-mode
        run: |
          task build-app

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fruit-stock-management
          path: target/fruit-stock-management-*.jar
          retention-days: 30
      
      - name: Upload Artifact SBOM
        uses: actions/upload-artifact@v4
        with:
          name: fruit-stock-management-sbom
          path: target/classes/META-INF/sbom/application.cdx.json 
          retention-days: 30
  
  conatiner-image:
    name: üè≠ Build Container Image
    runs-on: ubuntu-latest
    needs: 
      - build
    if: ${{ success() }}
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Download Artefact
        uses: actions/download-artifact@v4
        with:
          name: fruit-stock-management
          path: target
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          cache-to: type=inline
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      

  